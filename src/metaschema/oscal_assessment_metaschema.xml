<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="../../build/metaschema/lib/metaschema-check.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<?xml-stylesheet type="text/xsl" href="metaschema-browser.xsl"?>
<?xml-stylesheet type="text/css" href="../../build/metaschema/lib/metaschema-author.css"?>
<METASCHEMA xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://csrc.nist.gov/ns/oscal/metaschema/1.0"
    xmlns:o="http://csrc.nist.gov/ns/oscal/example"
    xsi:schemaLocation="http://csrc.nist.gov/ns/oscal/metaschema/1.0 ../../build/metaschema/lib/metaschema.xsd"
    root="VALIDATION_common_root">
    
    <schema-name>OSCAL Implementation Common Information</schema-name>
    <schema-version>1.0.0-milestone2</schema-version>
    <short-name>oscal-implementation-common</short-name>
    <namespace>http://csrc.nist.gov/ns/oscal/1.0</namespace>
    
    <import href="oscal_metadata_metaschema.xml"/>
    
    <define-assembly name="VALIDATION_common_root">
        <formal-name>(nominal root)</formal-name>
        <description>NOT TO BE USED IN A METASCHEMA</description>
        
        <model>
            <assembly ref="using"/>
            <assembly ref="configuration" max-occurs="unbounded">
                <group-as name="configurations" in-json="BY_KEY"/>
            </assembly>
            <assembly ref="artifact" max-occurs="unbounded">
                <group-as name="artifacts" in-json="BY_KEY"/>
            </assembly>
        </model>
    </define-assembly>


    <define-assembly name="using">
        <formal-name>Using</formal-name>
        <description>The set of implementations needed to support the control requirements.</description>
        <model>
            <assembly ref="implementation" min-occurs="1" max-occurs="unbounded">
                <group-as name="implementations"/>
            </assembly>
        </model>
    </define-assembly>
    
    
    <define-assembly name="implementation">
        <formal-name>Implementation</formal-name>
        <description>An implementation needed to support the control requirements.</description>
        <!-- MUST provide at least one of the following -->
        <flag ref="configuration-id"/>
        <flag ref="artifact-id"/>
        <model>
            <field ref="description"/>
            <field ref="prop" max-occurs="unbounded">
                <group-as name="properties"/>
            </field>
            <field ref="link" max-occurs="unbounded">
                <group-as name="links"/>
                <!-- TODO: Model specific link relationships -->
            </field>
            <assembly ref="with-argument" max-occurs="unbounded">
                <group-as name="with-arguments" in-json="BY_KEY"/>
            </assembly>
            <field ref="remarks"/>
        </model>
    </define-assembly>
    
    <define-assembly name="with-argument">
        <formal-name>With Argument</formal-name>
        <description>An argument to pass to the referenced configuration.</description>
        <json-key flag-name="name"/>
        <flag name="name" as-type="NCName">
            <formal-name>Argument Name</formal-name>
            <description>The name of the argument.</description>
        </flag>
        <model>
            <field ref="use-param"/>
        </model>
    </define-assembly>
    
    <define-field name="use-param" as-type="NCName">
        <formal-name>Using Parameter</formal-name>
        <description>An identified parameter from the catalog or profile who's value is assigned to the argument.</description>
    </define-field>
    
    <define-flag name="configuration-id" as-type="NCName">
        <formal-name>Configuration Identifier Reference</formal-name>
        <description>A reference to a configuration defined on the component.</description>
    </define-flag>
    
    <define-flag name="artifact-id" as-type="NCName">
        <formal-name>Artifact Identifier Reference</formal-name>
        <description>A reference to an artifact defined on the component.</description>
    </define-flag>
    
    
    <define-assembly name="configuration">
        <formal-name>Configuration</formal-name>
        <description>Information on how to configure the component (for technical types of components).</description>
        <json-key flag-name="id"/>
        <flag name="id" as-type="NCName" required="yes">
            <formal-name>Configuration Identifier</formal-name>
            <description>A unique identifier for the configuration.</description>
        </flag>
        <model>
            <field ref="description" min-occurs="1"/>
            <field ref="prop" max-occurs="unbounded">
                <group-as name="properties"/>
            </field>
            <field ref="link" max-occurs="unbounded">
                <group-as name="links"/>
                <!-- TODO: Model specific link relationships -->
            </field>
            <assembly ref="argument" max-occurs="unbounded">
                <group-as name="arguments" in-json="BY_KEY"/>
            </assembly>
            <assembly ref="mechanism" max-occurs="unbounded">
                <group-as name="mechanisms"/>
            </assembly>
        </model>
    </define-assembly>
    
    <define-assembly name="mechanism">
        <formal-name>mechanism</formal-name>
        <description>Information on a mechanism used to configure the component.</description>
        <flag name="id" as-type="NCName" required="yes">
            <formal-name>Mechanism Identifier</formal-name>
            <description>A unique identifier for the configuration mechanism.</description>
        </flag>
        <model>
            <field ref="description"/>
            <field ref="prop" max-occurs="unbounded">
                <group-as name="properties"/>
            </field>
            <field ref="link" max-occurs="unbounded">
                <group-as name="links"/>
                <!-- TODO: Model specific link relationships -->
            </field>
            <assembly ref="configuration-method" min-occurs="1"/>
            <assembly ref="verification-method" min-occurs="1"/>
            <field ref="remarks"/>
        </model>
    </define-assembly>
    
    
    <define-assembly name="configuration-method">
        <formal-name>Configuration Method</formal-name>
        <description>A mechanism used to deploy the configuration.</description>
        <model>
            <field ref="description"/>
            <field ref="script" min-occurs="1"/>
            <field ref="remarks"/>
        </model>
    </define-assembly>
    
    <define-assembly name="verification-method">
        <formal-name>Verification Method</formal-name>
        <description>A mechanism used to verify a previously deployed configuration.</description>
        <model>
            <field ref="description"/>
            <field ref="script" min-occurs="1"/>
            <field ref="remarks"/>
        </model>
    </define-assembly>
    
    <define-field name="script" as-type="string">
        <formal-name>Script</formal-name>
        <description>An executable script.</description>
        <flag ref="system" required="yes"/>
    </define-field>
    
    <define-flag name="system" as-type="uri">
        <formal-name>system</formal-name>
        <description>A configure or verify system type described by a well-known URI</description>
    </define-flag>
    
    <define-assembly name="argument">
        <formal-name>argument</formal-name>
        <description>TBD</description>
        <json-key flag-name="name"/>
        <flag name="name" as-type="NCName" required="yes">
            <formal-name>Argument Name</formal-name>
            <description>The name of an argument to be passed into a script.</description>
        </flag>
        <flag name="type" as-type="NCName" required="yes">
            <formal-name>Argument Data Type</formal-name>
            <description>The data type of the argument.</description>
            <allowed-values>
                <enum value="duration-seconds"></enum>
                <enum value="duration-minutes"></enum>
                <enum value="duration-hours"></enum>
                <enum value="duration-days"></enum>
                <enum value="integer"></enum>
                <enum value="decimal"></enum>
                <enum value="string"></enum>
            </allowed-values>
        </flag>
        <model>
            <!-- Need to model the argument -->
            <field ref="remarks"/>
        </model>
    </define-assembly>
    
    <define-assembly name="artifact">
        <formal-name>Configuration</formal-name>
        <description>Information on how to use the component (for documentary types of components).</description>
        <json-key flag-name="id"/>
        <flag name="id" as-type="NCName" required="yes">
            <formal-name>Artifact Identifier</formal-name>
            <description>A unique identifier for the artifact.</description>
        </flag>
        <model>
            <field ref="description" min-occurs="1"/>
            <field ref="prop" max-occurs="unbounded">
                <group-as name="properties"/>
            </field>
            <field ref="link" max-occurs="unbounded">
                <group-as name="links"/>
                <!-- TODO: Model specific link relationships -->
            </field>
            <assembly ref="implementation-source" min-occurs="1"/>
            <assembly ref="verification-process" min-occurs="1"/>
            <field ref="remarks"/>
        </model>
    </define-assembly>
    
    <define-assembly name="implementation-source">
        <formal-name>Artifact Implementation Source</formal-name>
        <description>TBD</description>
        <flag name="href" as-type="uri" required="yes">
            <formal-name>Source Resource Reference</formal-name>
            <description>Where to get the artifact</description>
        </flag>
        <model>
            <field ref="description" min-occurs="1"/>
            <field ref="prop" max-occurs="unbounded">
                <group-as name="properties"/>
            </field>
            <field ref="link" max-occurs="unbounded">
                <group-as name="links"/>
                <!-- TODO: Model specific link relationships -->
            </field>
            <field ref="remarks"/>
        </model>
    </define-assembly>
    
    <define-assembly name="verification-process">
        <formal-name>Artifact Verification Process</formal-name>
        <description>TBD</description>
        <flag name="href" as-type="uri" required="yes">
            <formal-name>Verification Process Resource Reference</formal-name>
            <description>Where to get the process to verify the artifact is implemented.</description>
        </flag>
        <model>
            <field ref="description" min-occurs="1"/>
            <field ref="prop" max-occurs="unbounded">
                <group-as name="properties"/>
            </field>
            <field ref="link" max-occurs="unbounded">
                <group-as name="links"/>
                <!-- TODO: Model specific link relationships -->
            </field>
            <field ref="remarks"/>
        </model>
    </define-assembly>
    
</METASCHEMA>