<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="../../build/metaschema/toolchains/xslt-M4/validate/metaschema-check.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<METASCHEMA xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xmlns="http://csrc.nist.gov/ns/oscal/metaschema/1.0"
            xsi:schemaLocation="http://csrc.nist.gov/ns/oscal/metaschema/1.0 ../../build/metaschema/toolchains/xslt-M4/validate/metaschema.xsd">
   <schema-name>OSCAL Assessment Plan Format</schema-name>
   <schema-version>1.0.0-milestone3</schema-version>
   <short-name>oscal-ap</short-name>
   <namespace>http://csrc.nist.gov/ns/oscal/1.0</namespace>
   <remarks>
      <p>The OSCAL assessment plan format is used to describe the information typically provided by an assessor during the preparation for an assessment.</p>
      <p>The root of the OSCAL assessment plan format is <code>assessment-plan</code>.</p>
   </remarks>
   <!-- IMPORT STATEMENTS -->
   <import href="oscal_metadata_metaschema.xml"/>
   <import href="oscal_assessment-common_metaschema.xml"/>
   <!-- TOP LEVEL ASSEMBLY -->
   <define-assembly name="assessment-plan">
      <formal-name>Security Assessment Plan (SAP)</formal-name>
      <description>An assessment plan, such as those provided by a FedRAMP assessor.</description>
      <root-name>assessment-plan</root-name>
      <define-flag name="uuid" required="yes" as-type="uuid">
         <formal-name>Assessment Plan Universally Unique Identifier</formal-name>
         <description>Uniquely identifies this assessment plan. This UUID must be changed each time the content of the plan changes.</description>
      </define-flag>
      <model>
         <assembly ref="metadata" min-occurs="1" max-occurs="1"/>
         <assembly ref="import-ssp" min-occurs="1" max-occurs="1">
            <remarks>
               <p>Used by the SAP to import information about the system being assessed.</p>
            </remarks>
         </assembly>
         <!-- CHANGED: "objectives" to "reviewed-controls" -->
         <assembly ref="reviewed-controls" min-occurs="1" max-occurs="1"/>
         <assembly ref="assessment-subjects" min-occurs="0" max-occurs="1"/>
         <assembly ref="assets" min-occurs="0" max-occurs="1"/>

         <!-- CHANGED: implemented new model -->
         <assembly ref="assessment-activity" min-occurs="0" max-occurs="unbounded">
            <group-as name="assessment-activities" in-json="ARRAY"/>
         </assembly>

         <assembly ref="event" min-occurs="0" max-occurs="unbounded">
            <group-as name="events" in-json="ARRAY"/>
         </assembly>

         <!-- CHANGED: Moved "schedule" to top level (from assessment-activities), and changed model to "task" -->
         <assembly ref="task" min-occurs="0" max-occurs="unbounded">
            <group-as name="tasks" in-json="ARRAY"/>
         </assembly>
         <assembly ref="back-matter" min-occurs="0" max-occurs="1"/>
      </model>
   </define-assembly>
   
   <!-- ===============================  -->
   <!-- ========= NEW CONTENT =========  -->
   <!-- ===============================  -->
   <define-assembly name="assessment-activity">
      <formal-name>Assessment Activity</formal-name>
      <description>Identifies an assessment activity. In the assessment plan, this is an intended activity which may be associated with an assessment event. In the assessment results, this an activity that was actually performed as part of an assessement.</description>
      <define-flag name="uuid" required="yes" as-type="uuid">
         <formal-name>Assessment Activity Universally Unique Identifier</formal-name>         <description>Uniquely identifies this assessment activity. This UUID may be referenced elsewhere in an OSCAL document when refering to this information. A UUID should be consistantly used for a given included activity across revisions of the document.</description>
      </define-flag>
      <model>
         <define-field name="title" min-occurs="0" max-occurs="1" as-type="markup-line">
            <formal-name>Included Activity Title</formal-name>
            <description>The title for this included activity.</description>
         </define-field>
         <!-- CHANGE: Added WITH_WRAPPER to description -->
         <define-field name="description" min-occurs="1" max-occurs="1" as-type="markup-multiline" in-xml="WITH_WRAPPER">
            <formal-name>Included Activity Description</formal-name>
            <description>A human-readable description of this included activity.</description>
         </define-field>
         <!-- QUESTION: Should "origination" appear here or on the event? -->
         <assembly ref="origination" max-occurs="1"/>
         <field ref="property" max-occurs="unbounded">
            <!-- CHANGE: props to properties -->
            <group-as name="properties" in-json="ARRAY"/>
         </field>
         <assembly ref="annotation" max-occurs="unbounded">
            <group-as name="annotations" in-json="ARRAY"/>
         </assembly>
         <assembly ref="link" max-occurs="unbounded">
            <group-as name="links" in-json="ARRAY"/>
         </assembly>
         
         <!-- CHANGE: Add "action". Replaces "test-step".  -->
         <define-assembly name="action" min-occurs="0" max-occurs="unbounded">
            <formal-name>Action</formal-name>
            <description>Identifies an individual actions, such as test steps or examination procedures.</description>
            <group-as name="actions" in-json="ARRAY"/>
            <define-flag name="uuid" required="yes" as-type="uuid">
               <formal-name>Action Universally Unique Identifier</formal-name>
               <description>Uniquely identifies this defined action. This UUID may be referenced elsewhere in an OSCAL document when refering to this information. A UUID should be consistantly used for a given test step across revisions of the document.</description>
            </define-flag>
            <model>
               <!-- CHANGED: removed "sequence", since the collection is ordered -->
               <define-field name="description" min-occurs="1" max-occurs="1" as-type="markup-multiline">
                  <formal-name>Action Description</formal-name>
                  <description>A human-readable description of this action.</description>
               </define-field>
               <!-- QUESTION: Should "origination" appear here or on the event? It also appears on the parent. -->
               <assembly ref="origination" min-occurs="0" max-occurs="1"/>
               <field ref="property" min-occurs="0" max-occurs="unbounded">
                  <group-as name="properties" in-json="ARRAY"/>
               </field>
               <assembly ref="annotation" max-occurs="unbounded">
                  <group-as name="annotations" in-json="ARRAY"/>
               </assembly>
               <assembly ref="link" max-occurs="unbounded">
                  <group-as name="links" in-json="ARRAY"/>
               </assembly>
               <assembly ref="responsible-role" max-occurs="unbounded">
                  <!-- CHANGE: Removed "role-id" and "party-uuid" in favor of the standard "responsible-role". -->
                  <group-as name="responsible-roles" in-json="BY_KEY"/>
                  <remarks>
                     <p>Identifies the roles, and optionally the parties, associated with this action that is part of an assessment activity.</p>
                  </remarks>
               </assembly>
               <field ref="remarks" in-xml="WITH_WRAPPER" min-occurs="0" max-occurs="1"/>
            </model>
         </define-assembly>
         <assembly ref="reviewed-controls">
            <remarks>
               <p>This can be optionally used to define the set of controls and control objectives that are assessed by this activity.</p>
            </remarks>
         </assembly>
         <assembly ref="responsible-role" max-occurs="unbounded">
            <!-- CHANGE: Removed "role-id" and "party-uuid" in favor of the standard "responsible-role". -->
            <group-as name="responsible-roles" in-json="BY_KEY"/>
            <remarks>
               <p>Identifies the roles, and optionally the parties, associated with this assessment activity.</p>
            </remarks>
         </assembly>
         <field ref="remarks" in-xml="WITH_WRAPPER" min-occurs="0" max-occurs="1"/>
      </model>
      <constraint>
         <!-- TODO: Dave to double-check constraints here -->
         <allowed-values target="prop/@name" allow-other="yes">
            <enum value="method">The assessment method to use. This typically appears on parts with the name "assessment".</enum>
         </allowed-values>
         <has-cardinality target="prop[@name='method']" min-occurs="1"/>
         <allowed-values target="prop[@name='method']/value()">
            <enum value="INTERVIEW">The process of holding discussions with individuals or groups of individuals within an organization to once again, facilitate assessor understanding, achieve clarification, or obtain evidence.</enum>
            <enum value="EXAMINE">The process of reviewing, inspecting, observing, studying, or analyzing one or more assessment objects (i.e., specifications, mechanisms, or activities).</enum>
            <enum value="TEST">The process of exercising one or more assessment objects (i.e., activities or mechanisms) under specified conditions to compare actual with expected behavior.</enum>
         </allowed-values>
      </constraint>
   </define-assembly>

   <define-assembly name="event">
      <formal-name>Event</formal-name>
      <description>Identifies an assessment event that must occur as part of an assessment plan or an assessment event that occured in an assessment results.</description>
      <define-flag name="uuid" required="yes" as-type="uuid">
         <formal-name>Event Universally Unique Identifier</formal-name>
         <description>Uniquely identifies an assessment event. This UUID may be referenced elsewhere in an OSCAL document when refering to this information. A UUID should be consistantly used for this schedule across revisions of the document.</description>
      </define-flag>
      <model>
         <define-field name="title" min-occurs="0" max-occurs="1" as-type="markup-line">
            <formal-name>Event Title</formal-name>
            <description>The title for this event.</description>
         </define-field>
         <!-- CHANGE: Added WITH_WRAPPER to description -->
         <define-field name="description" min-occurs="1" max-occurs="1" as-type="markup-multiline" in-xml="WITH_WRAPPER">
            <formal-name>Event Description</formal-name>
            <description>A human-readable description of this event.</description>
         </define-field>
         
         <define-assembly name="condition">
            <formal-name>Event Condition</formal-name>
            <description>The condition under which the event is intended to occur.</description>
            <model>
               <choice>
                  <define-field name="on-date" as-type="empty">
                     <formal-name>On Date Condition</formal-name>
                     <description>The event is intended to occur on the specified date.</description>
                     <define-flag name="date" as-type="dateTime-with-timezone" required="yes">
                        <formal-name>On Date Condition</formal-name>
                        <description>The event must occur on the specified date.</description>
                     </define-flag>
                  </define-field>
                  <define-field name="within-date-range" as-type="empty">
                     <formal-name>On Date Range Condition</formal-name>
                     <description>The event is intended to occur within the specified date range.</description>
                     <define-flag name="start" as-type="dateTime-with-timezone" required="yes">
                        <formal-name>Start Date Condition</formal-name>
                        <description>The event must occur on or after the specified date.</description>
                     </define-flag>
                     <define-flag name="end" as-type="dateTime-with-timezone" required="yes">
                        <formal-name>End Date Condition</formal-name>
                        <description>The event must occur on or before the specified date.</description>
                     </define-flag>
                  </define-field>
                  <define-field name="at-frequency" as-type="empty">
                     <formal-name>Frequency Condition</formal-name>
                     <description>The event is intended to occur at the specified frequency.</description>
                     <define-flag name="period" as-type="positiveInteger" required="yes">
                        <formal-name>Period</formal-name>
                        <description>The event must occur after the specified period has elapsed.</description>
                     </define-flag>
                     <define-flag name="unit" as-type="dateTime-with-timezone" required="yes">
                        <formal-name>Time Unit</formal-name>
                        <description>The unit of time for the period.</description>
                        <constraint>
                           <allowed-values>
                              <enum value="seconds">The period is specified in seconds.</enum>
                              <enum value="minutes">The period is specified in minutes.</enum>
                              <enum value="hours">The period is specified in hours.</enum>
                              <enum value="days">The period is specified in days.</enum>
                              <enum value="months">The period is specified in calendar months.</enum>
                              <enum value="years">The period is specified in calendar years.</enum>
                           </allowed-values>
                        </constraint>
                     </define-flag>
                  </define-field>
               </choice>
            </model>
         </define-assembly>

         <!-- CHANGED: Added "activity-selection" -->
         <define-assembly name="activity-instance" min-occurs="1" max-occurs="unbounded">
            <formal-name>Activity Instance</formal-name>
            <description>Identifies an individual activity to be performed with this assessment event.</description>
            <group-as name="activity-instances" in-json="ARRAY"/>
            <define-flag name="uuid" required="yes" as-type="uuid">
               <formal-name>Activity Instance Universally Unique Identifier</formal-name>
               <description>Uniquely identifies an assessment activity to be performed as part of the event. This UUID may be referenced elsewhere in an OSCAL document when refering to this information. A UUID should be consistantly used for this schedule across revisions of the document.</description>
            </define-flag>
            <define-flag name="activity-uuid" required="yes" as-type="uuid">
               <formal-name>Activity Universally Unique Identifier Reference</formal-name>
               <description>References an activity defined in the list of activities.</description>
            </define-flag>
            <model>
               <define-field name="title" min-occurs="0" max-occurs="1" as-type="markup-line">
                  <formal-name>Activity Instance Title</formal-name>
                  <description>The title for this activity instance.</description>
               </define-field>
               <define-field name="description" min-occurs="1" max-occurs="1" as-type="markup-multiline">
                  <formal-name>Activity Instance Description</formal-name>
                  <description>A human-readable description of this activity instance.</description>
               </define-field>
               <!-- QUESTION: Should this be renamed? -->
               <assembly ref="origination" min-occurs="0" max-occurs="1"/>
               <field ref="property" min-occurs="0" max-occurs="unbounded">
                  <!-- CHANGE: props to properties -->
                  <group-as name="properties" in-json="ARRAY"/>
               </field>
               <assembly ref="annotation" max-occurs="unbounded">
                  <group-as name="annotations" in-json="ARRAY"/>
               </assembly>
               <assembly ref="link" max-occurs="unbounded">
                  <group-as name="links" in-json="ARRAY"/>
               </assembly>
               <assembly ref="responsible-party" max-occurs="unbounded">
                  <group-as name="responsible-parties" in-json="BY_KEY"/>
                  <remarks>
                     <p>Identifies the person or organization responsible for performing a specific role defined by the activity.</p>
                  </remarks>
               </assembly>
               <choice>
                  <assembly ref="assessment-subjects" min-occurs="1"/>
                  <define-assembly name="assessment-subject-placeholder">
                     <formal-name>Assessment Subject Placeholder</formal-name>
                     <description>Used when the assessment subjects will be determined as part of one or more other assessment activities. These assessment subjects will be recorded in the assessment results.</description>
                     <model>
                        <define-field name="description" as-type="markup-multiline">
                           <formal-name>Assessment Subject Placeholder Description</formal-name>
                           <description>A human-readable description of intent of this assessment subject placeholder.</description>
                        </define-field>
                        <define-field name="source" as-type="empty" min-occurs="1" max-occurs="unbounded">
                           <formal-name>Assessment Subject Source</formal-name>
                           <description>Assessment subjects will be identified while conducting the referenced activity-instance.</description>
                           <group-as name="sources" in-json="ARRAY"/>
                           <define-flag name="activity-instance-uuid" required="yes" as-type="uuid">
                              <formal-name>Activity Instance Universally Unique Identifier</formal-name>
                              <description>Uniquely identifies an assessment activity to be performed as part of the event. This UUID may be referenced elsewhere in an OSCAL document when refering to this information. A UUID should be consistantly used for this schedule across revisions of the document.</description>
                           </define-flag>
                        </define-field>
                        <field ref="property" min-occurs="0" max-occurs="unbounded">
                           <!-- CHANGE: props to properties -->
                           <group-as name="properties" in-json="ARRAY"/>
                        </field>
                        <assembly ref="annotation" max-occurs="unbounded">
                           <group-as name="annotations" in-json="ARRAY"/>
                        </assembly>
                        <assembly ref="link" max-occurs="unbounded">
                           <group-as name="links" in-json="ARRAY"/>
                        </assembly>
                        <field ref="remarks" in-xml="WITH_WRAPPER" min-occurs="0" max-occurs="1"/>
                     </model>
                  </define-assembly>
               </choice>
               <field ref="remarks" in-xml="WITH_WRAPPER" min-occurs="0" max-occurs="1"/>
            </model>
         </define-assembly>
         <field ref="remarks" in-xml="WITH_WRAPPER" min-occurs="0" max-occurs="1"/>
      </model>
   </define-assembly>
   
   <define-assembly name="task">
      <formal-name>Planned Task</formal-name>
      <description>Used to represent a planned task or milestone, which may be associated with a series of assessment events.</description>
      <model>
         <define-field name="title" min-occurs="1" as-type="markup-line">
            <formal-name>Task Title</formal-name>
            <description>The title for this task.</description>
         </define-field>
         <define-field name="description" min-occurs="1" max-occurs="1" as-type="markup-multiline">
            <formal-name>Task Description</formal-name>
            <description>A human-readable description of this task.</description>
         </define-field>
         <field ref="property" min-occurs="0" max-occurs="unbounded">
            <!-- CHANGE: props to properties -->
            <group-as name="properties" in-json="ARRAY"/>
         </field>
         <assembly ref="annotation" max-occurs="unbounded">
            <group-as name="annotations" in-json="ARRAY"/>
         </assembly>
         <assembly ref="link" max-occurs="unbounded">
            <group-as name="links" in-json="ARRAY"/>
         </assembly>
         <define-assembly name="when-due">
            <formal-name>Planned Task Due</formal-name>
            <description>When the task is intended to be completed.</description>
            <model>
               <choice>
                  <define-field name="on-date" as-type="empty">
                     <formal-name>On Date Condition</formal-name>
                     <description>The task is intended to be completed on the specified date.</description>
                     <define-flag name="date" as-type="dateTime-with-timezone" required="yes">
                        <formal-name>On Date Condition</formal-name>
                        <description>The event must occur on the specified date.</description>
                     </define-flag>
                  </define-field>
                  <define-field name="within-date-range" as-type="empty">
                     <formal-name>On Date Range Condition</formal-name>
                     <description>The task is intended to be completed within the specified date range.</description>
                     <define-flag name="start" as-type="dateTime-with-timezone" required="yes">
                        <formal-name>Start Date Condition</formal-name>
                        <description>The event must occur on or after the specified date.</description>
                     </define-flag>
                     <define-flag name="end" as-type="dateTime-with-timezone" required="yes">
                        <formal-name>End Date Condition</formal-name>
                        <description>The event must occur on or before the specified date.</description>
                     </define-flag>
                  </define-field>
               </choice>
            </model>
         </define-assembly>
         <define-assembly name="associated-event" max-occurs="unbounded">
            <formal-name>Associated Event</formal-name>
            <description>An eventy that is associated with this planned task.</description>
            <group-as name="associated-events"/>
            <define-flag name="event-uuid" required="yes" as-type="uuid">
               <formal-name>Event Universally Unique Identifier Reference</formal-name>
               <description>References an event defined in the plan.</description>
            </define-flag>
            <model>
               <field ref="property" min-occurs="0" max-occurs="unbounded">
                  <!-- CHANGE: props to properties -->
                  <group-as name="properties" in-json="ARRAY"/>
               </field>
               <assembly ref="annotation" max-occurs="unbounded">
                  <group-as name="annotations" in-json="ARRAY"/>
               </assembly>
               <assembly ref="link" max-occurs="unbounded">
                  <group-as name="links" in-json="ARRAY"/>
               </assembly>
            </model>
         </define-assembly>
         <field ref="remarks" in-xml="WITH_WRAPPER" min-occurs="0" max-occurs="1"/>
      </model>
   </define-assembly>
   <!-- ===============================  -->
   <!-- ======= END NEW CONTENT =======  -->
   <!-- ===============================  -->
</METASCHEMA>
