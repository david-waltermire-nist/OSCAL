<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="../../build/metaschema/toolchains/xslt-M4/validate/metaschema-check.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<METASCHEMA xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xmlns="http://csrc.nist.gov/ns/oscal/metaschema/1.0"
            xsi:schemaLocation="http://csrc.nist.gov/ns/oscal/metaschema/1.0 ../../build/metaschema/toolchains/xslt-M4/validate/metaschema.xsd">
   <schema-name>OSCAL Assessment Plan Format</schema-name>
   <schema-version>1.0.0-milestone3</schema-version>
   <short-name>oscal-ap</short-name>
   <namespace>http://csrc.nist.gov/ns/oscal/1.0</namespace>
   <remarks>
      <p>The OSCAL assessment plan format is used to describe the information typically provided by an assessor during the preparation for an assessment.</p>
      <p>The root of the OSCAL assessment plan format is <code>assessment-plan</code>.</p>
   </remarks>
   <!-- IMPORT STATEMENTS -->
   <import href="oscal_metadata_metaschema.xml"/>
   <import href="oscal_assessment-common_metaschema.xml"/>
   <!-- TOP LEVEL ASSEMBLY -->
   <define-assembly name="assessment-plan">
      <formal-name>Security Assessment Plan (SAP)</formal-name>
      <description>An assessment plan, such as those provided by a FedRAMP assessor.</description>
      <root-name>assessment-plan</root-name>
      <define-flag name="uuid" required="yes" as-type="uuid">
         <formal-name>Assessment Plan Universally Unique Identifier</formal-name>
         <description>Uniquely identifies this assessment plan. This UUID must be changed each time the content of the plan changes.</description>
      </define-flag>
      <model>
         <assembly ref="metadata" min-occurs="1" max-occurs="1"/>
         <assembly ref="import-ssp" min-occurs="1" max-occurs="1">
            <remarks>
               <p>Used by the SAP to import information about the system being assessed.</p>
            </remarks>
         </assembly>
         <define-assembly name="local-definitions">
            <!-- CHANGE: added "local-definitions" -->
            <formal-name>Local Definitions</formal-name>
            <description>Used to define data objects that are used in the assessment plan, that do not appear in the referenced SSP.</description>
            <model>
               <assembly ref="system-component" min-occurs="0" max-occurs="unbounded">
                  <use-name>component</use-name>
                  <group-as name="components" in-json="BY_KEY"/>
                  <remarks>
                     <p>Used to add any components, not defined via the System Security Plan (AR-&gt;AP-&gt;SSP)</p>
                  </remarks>
               </assembly>
               <assembly ref="inventory-item" min-occurs="0" max-occurs="unbounded">
                  <group-as name="inventory-items" in-json="BY_KEY"/>
                  <remarks>
                     <p>Used to add any inventory-items, not defined via the System Security Plan (AR-&gt;AP-&gt;SSP)</p>
                  </remarks>
               </assembly>
               <assembly ref="system-user" min-occurs="0" max-occurs="unbounded">
                  <use-name>user</use-name>
                  <group-as name="users" in-json="BY_KEY"/>
                  <remarks>
                     <p>Used to add any users, not defined via the System Security Plan (AR-&gt;AP-&gt;SSP)</p>
                  </remarks>
               </assembly>
               <assembly ref="local-objective" min-occurs="0" max-occurs="unbounded">
                  <use-name>objectives</use-name>
                  <group-as name="objectives" in-json="ARRAY"/>
               </assembly>
               <field ref="remarks" in-xml="WITH_WRAPPER" min-occurs="0" max-occurs="1"/>
               
            </model>
         </define-assembly>
         <!-- CHANGED: "objectives" to "reviewed-controls" -->
         <assembly ref="reviewed-controls" min-occurs="1" max-occurs="1"/>
         <assembly ref="assessment-subjects" min-occurs="0" max-occurs="1"/>
         <assembly ref="assets" min-occurs="0" max-occurs="1"/>

         <!-- CHANGED: implemented new model -->
         <assembly ref="assessment-activity" min-occurs="0" max-occurs="unbounded">
            <group-as name="assessment-activities" in-json="ARRAY"/>
         </assembly>

         <assembly ref="assessment-action" min-occurs="0" max-occurs="unbounded">
            <group-as name="assessment-actions" in-json="ARRAY"/>
         </assembly>

         <!-- CHANGED: Moved "schedule" to top level (from assessment-activities), and changed model to "task" -->
         <assembly ref="task" min-occurs="0" max-occurs="unbounded">
            <group-as name="tasks" in-json="ARRAY"/>
         </assembly>
         <assembly ref="back-matter" min-occurs="0" max-occurs="1"/>
      </model>
   </define-assembly>

   <define-assembly name="task">
      <formal-name>Planned Task</formal-name>
      <description>Used to represent a planned task or milestone, which may be associated with a series of assessment events.</description>
      <model>
         <define-field name="title" min-occurs="1" as-type="markup-line">
            <formal-name>Task Title</formal-name>
            <description>The title for this task.</description>
         </define-field>
         <define-field name="description" min-occurs="1" max-occurs="1" as-type="markup-multiline">
            <formal-name>Task Description</formal-name>
            <description>A human-readable description of this task.</description>
         </define-field>
         <field ref="property" min-occurs="0" max-occurs="unbounded">
            <!-- CHANGE: props to properties -->
            <group-as name="properties" in-json="ARRAY"/>
         </field>
         <assembly ref="annotation" max-occurs="unbounded">
            <group-as name="annotations" in-json="ARRAY"/>
         </assembly>
         <assembly ref="link" max-occurs="unbounded">
            <group-as name="links" in-json="ARRAY"/>
         </assembly>
         <define-field name="start" as-type="dateTime-with-timezone" min-occurs="1">
            <formal-name>Task Start Date</formal-name>
            <description>The task must occur on or after the specified date.</description>
         </define-field>
         <define-field name="end" as-type="dateTime-with-timezone" min-occurs="1">
            <formal-name>Task End Date</formal-name>
            <description>The task must occur on or before the specified date.</description>
         </define-field>
         <define-assembly name="associated-action" max-occurs="unbounded">
            <formal-name>Associated Action</formal-name>
            <description>An assessment action that is associated with this planned task.</description>
            <group-as name="associated-actions"/>
            <define-flag name="assessment-action-uuid" required="yes" as-type="uuid">
               <formal-name>Assessment Action Universally Unique Identifier Reference</formal-name>
               <description>References an event defined in the plan.</description>
            </define-flag>
            <model>
               <field ref="property" min-occurs="0" max-occurs="unbounded">
                  <!-- CHANGE: props to properties -->
                  <group-as name="properties" in-json="ARRAY"/>
               </field>
               <assembly ref="annotation" max-occurs="unbounded">
                  <group-as name="annotations" in-json="ARRAY"/>
               </assembly>
               <assembly ref="link" max-occurs="unbounded">
                  <group-as name="links" in-json="ARRAY"/>
               </assembly>
               
            </model>
         </define-assembly>
         <assembly ref="responsible-party" max-occurs="unbounded">
            <group-as name="responsible-parties" in-json="BY_KEY"/>
            <remarks>
               <p>Identifies the person or organization responsible for performing a specific role related to the task.</p>
            </remarks>
         </assembly>
         <field ref="remarks" in-xml="WITH_WRAPPER" min-occurs="0" max-occurs="1"/>
      </model>
   </define-assembly>
   <!-- ===============================  -->
   <!-- ======= END NEW CONTENT =======  -->
   <!-- ===============================  -->
</METASCHEMA>
